# Generated by Django 5.2.6 on 2025-09-13 16:08

import django.db.models.deletion
import django_enumfield.db.fields
import inventory.models
import uuid
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('accounts', '0001_initial'),
        ('events', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='InventoryHold',
            fields=[
                ('inventory_hold_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('quantity', models.PositiveIntegerField(default=0)),
                ('status', django_enumfield.db.fields.EnumField(default=1, enum=inventory.models.InventoryHold.HOLD_STATUS)),
                ('expires_at', models.DateTimeField()),
                ('request_id', models.CharField(max_length=100, unique=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('events_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holds', to='events.events')),
                ('ticket_type', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.tickettype')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='holds', to='accounts.user')),
            ],
            options={
                'db_table': 'inventory_hold',
            },
        ),
        migrations.CreateModel(
            name='Seat',
            fields=[
                ('seat_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('section', models.CharField(blank=True, max_length=50)),
                ('row_label', models.CharField(blank=True, max_length=20)),
                ('seat_number', models.CharField(blank=True, max_length=20)),
                ('status', django_enumfield.db.fields.EnumField(default=1, enum=inventory.models.Seat.SEAT_STATUS)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='events.events')),
                ('ticket_type_id', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, to='events.tickettype')),
            ],
            options={
                'db_table': 'seat',
                'unique_together': {('event_id', 'section', 'row_label', 'seat_number')},
            },
        ),
        migrations.CreateModel(
            name='EventInventory',
            fields=[
                ('event_inventory_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('initial_qty', models.PositiveIntegerField()),
                ('sold_qty', models.PositiveIntegerField(default=0)),
                ('held_qty', models.PositiveIntegerField(default=0)),
                ('event_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='events.events')),
                ('ticket_type_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inventories', to='events.tickettype')),
            ],
            options={
                'db_table': 'event_inventory',
                'unique_together': {('event_id', 'ticket_type_id')},
            },
        ),
        migrations.CreateModel(
            name='InventoryHoldSeat',
            fields=[
                ('inventory_hold_seat_id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('hold_id', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='seats', to='inventory.inventoryhold')),
                ('seat_id', models.ForeignKey(on_delete=django.db.models.deletion.RESTRICT, related_name='hold_seats', to='inventory.seat')),
            ],
            options={
                'db_table': 'inventory_hold_seat',
                'unique_together': {('hold_id', 'seat_id')},
            },
        ),
    ]
